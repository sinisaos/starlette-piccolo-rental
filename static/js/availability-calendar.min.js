!function (t) { var e = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], a = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]; function n(t, e) { this.date = new Date, this.date.setDate(1), this.container = t, this.bookedDates = e, this.createCalendar(), this.renderMonth() } n.prototype = { __createToolbar: function () { var e = t("<div></div>").appendTo(this.container); e.addClass("availability-calendar-toolbar"), this.$monthLabel = t("<span></span>").appendTo(e); var a = t("<span></span>").appendTo(e); a.append('<input type="button" class="btn btn-primary" title="This month" value="This Month">'), a.append('<input type="button" class="btn btn-primary" title="Previous month" value="&#10094;">'), a.append('<input type="button" class="btn btn-primary" title="Next month" value="&#10095;">'); var n = a.children("input"), s = this; n.eq(0).on("click", function () { s.date = new Date, s.date.setDate(1), s.renderMonth() }), n.eq(1).on("click", function () { s.date.setMonth(s.date.getMonth() - 1), s.renderMonth() }), n.eq(2).on("click", function () { s.date.setMonth(s.date.getMonth() + 1), s.renderMonth() }) }, __createTable: function () { var a = t("<table></table>").appendTo(this.container); a.addClass("availability-calendar"); var n = t("<tr></tr>").appendTo(a); e.forEach(function (e) { t("<th></th>").html(e).appendTo(n) }); for (var s = 0; s < 6; ++s)(n = t("<tr></tr>").appendTo(a)).append("<td></td><td></td><td></td><td></td><td></td><td></td><td></td>"); this.$cells = a.find("td") }, createCalendar: function () { this.__createToolbar(), this.__createTable() }, __addPreviousMonthDays: function (t, e, a) { var n = t.getDay() - 1; if (n < 0 && (n = 6), n > 0) { t.setDate(0); for (var s = t.getDate(), i = s - n + 1; i <= s; ++i) { this.$cells.eq(a.length).html(i).addClass("ex-month"), t.setDate(i); var l = t.valueOf(); e[l] = a.length, a.push(l) } } }, __addThisMonthDays: function (t, e, a, n, s) { t.setFullYear(e, a + 1, 0); for (var i = t.getDate(), l = 1; l <= i; ++l) { this.$cells.eq(s.length).html(l), t.setDate(l); var d = t.valueOf(); n[d] = s.length, s.push(d) } }, __addNextMonthDays: function (t, e, a, n) { if (n.length < 42) { t.setMonth(e + 1, 1); for (var s = 42 - n.length, i = 1; i <= s; ++i) { this.$cells.eq(n.length).html(i).addClass("ex-month"), t.setDate(i); var l = t.valueOf(); a[l] = n.length, n.push(l) } } }, __addEvents: function (t, e) { var a = e[0], n = e[e.length - 1], s = this; this.bookedDates.forEach(function (e) { if (e.start <= n && e.end >= a) { var i = t[e.start], l = t[e.end]; void 0 !== i ? (s.$cells.eq(i).addClass("unavailable").append('<div class="first"></div>'), ++i) : i = t[a], void 0 !== l ? (s.$cells.eq(l).addClass("unavailable").append('<div class="last"></div>'), --l) : l = t[n], s.$cells.slice(i, l + 1).addClass("unavailable").append("<div></div>") } }) }, renderMonth: function () { var t = {}, e = [], n = this.date.getFullYear(), s = this.date.getMonth(), i = new Date(n, s, 1); this.$monthLabel.html(a[s] + " " + n), this.$cells.removeClass("ex-month"), this.$cells.filter(".unavailable").removeClass("unavailable").children().remove(), this.__addPreviousMonthDays(i, t, e), this.__addThisMonthDays(i, n, s, t, e), this.__addNextMonthDays(i, s, t, e), this.__addEvents(t, e) } }, t.fn.availabilityCalendar = function (t) { var e = []; return t.forEach(function (t) { var a = new Date(t.start), n = new Date(t.end); a.setHours(0, 0, 0, 0), n.setHours(0, 0, 0, 0), (a = a.valueOf()) <= (n = n.valueOf()) && e.push({ start: a, end: n }) }), this.each(function () { new n(this, e) }), this } }(jQuery);